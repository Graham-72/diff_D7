<?php
// $Id$

/*
 * Diff module for drupal.
 * Copyright (c) 2005 Mohammed Sameer.
 * Significantly updated and maintained by Moshe Weitzman <weitzman [at] tejasa DOT com>
 * This module is distributed under the GPL.
*/

function diff_help($section) {
  switch ($section) {
  case 'admin/diff':
    return "Show difference between node revisions.";
  }
}

/**
 * Implementation of hook_perm().
 */
function diff_perm() {
  return array('access diff');
}

/**
 * Implementation of hook_menu().
 */
function diff_menu($may_cache) {
  $items = array();

  if (!$may_cache) {
    if (arg(0) == 'node' && is_numeric(arg(1)) && user_access('access diff')) {
      $node = node_load(array('nid' => arg(1)));
      if ($node->nid && db_result(db_query('SELECT COUNT(vid) FROM {node_revisions} WHERE nid = %d', arg(1))) > 1) {
         $items[] = array('path' => 'node/'. arg(1) .'/diff',
         'title' => t('Diff'),
         'callback' => 'diff_page',
         'callback arguments' => array(arg(1)),
         'access' => user_access('access diff'),
         'weight' => 6,
         'type' => MENU_LOCAL_TASK);
      }
    }
  }
  return $items;
}

function diff_page($nid, $rid1 = NULL, $rid2 = NULL) {
  if (!is_null($rid1)) {
    return diff_revision_detail($nid, $rid1, $rid2);
  }
  else {
    return diff_revision_overview($nid);
  }
}


/**
 * Show a difference between revisions.
 */
function diff_revision_detail($nid, $rid1, $rid2 = NULL) {
  drupal_add_css(drupal_get_path('module', 'diff') . '/diff.css', 'module', 'all', FALSE);
  drupal_set_title(t('Differences between versions %1 and %2', array('%1' => $rid1, '%2' => $rid2 ? $rid2 : t('current'))));
  $path = dirname(__FILE__);
  require_once "$path/Text/diff.php";
  require_once "$path/Text/Diff/Renderer.php";
  require_once "$path/Text/Diff/Renderer/inline.php";

  $r1 = node_load(array('nid' => $nid), $rid1);
  $r2 = node_load(array('nid' => $nid), $rid2);
  $source = explode("\n", node_view($r1, FALSE, FALSE, FALSE));
  $target = explode("\n", node_view($r2, FALSE, FALSE, FALSE));
  $diff = &new Text_Diff($target, $source);
  $renderer = &new Text_Diff_Renderer_inline();
  return "<div class='diff'>". $renderer->render($diff) ."</div>";
}

/**
 * Generate an overview table of older revisions of a node.
 */
function diff_revision_overview($nid) {
  $node = node_load($nid);

  drupal_set_title(t('Revisions for %title', array('%title' => check_plain($node->title))));

  if ($node->vid) {
    $header = array(t('ID'), t('Author'), t('Title'), t('Date'), t('Log'), array('data' => ('Diff to'), 'colspan' => 3));

    $revisions = node_revision_list($node);
    $first = $revisions[count($revisions)-1]->vid;
    $current = $revisions[0]->vid;

    $i = 0;
    foreach ($revisions as $revision) {
      $row = ++$i;

      $links = array();
      if (!$revision->current_vid) {
        $links['current'] = l(t('current'), "node/$node->nid/diff/$current/$revision->vid");
        $txt_vid = $revision->vid;
      }
      else {
        $txt_vid = $revision->vid. ' '. t('(current)');
      }
      
      if ($i != count($revisions)) {
        $previous = $revisions[$i]->vid;
        $links['previous'] = l(t('previous'), "node/$node->nid/diff/$revision->vid/$previous");
        $links['first'] = l(t('first'), "node/$node->nid/diff/$revision->vid/$first");
      }

      $rows[] = array(
        l($txt_vid, "node/$nid/revisions/$revision->vid/view"),
        theme('username', $revision),
        check_plain($revision->title),
        format_date($revision->timestamp, 'small'),
        check_markup($revision->log),
        $links['current'],
        $links['previous'],
        $links['first'],
      );
    }
    $output .= theme('table', $header, $rows);
  }

  return $output;
}